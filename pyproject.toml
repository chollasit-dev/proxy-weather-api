[project]
name = 'proxy-weather-api'
version = '0.0.1'
description = 'A flask app for requesting weather data from OpenWeatherMap and serving the data upon the client request.'
requires-python = '>=3.12'
readme = 'README.md'

[tool.ruff]
# enable pycodestyle (`E`) and Pyflakes (`F`) codes by default
select = ['E', 'F']
ignore = []

# allow autofix for all enabled rules (if `--fix`) is provided
fixable = [
  'A',
  'B',
  'C',
  'D',
  'E',
  'F',
  'G',
  'I',
  'N',
  'Q',
  'S',
  'T',
  'W',
  'ANN',
  'ARG',
  'BLE',
  'COM',
  'DJ',
  'DTZ',
  'EM',
  'ERA',
  'EXE',
  'FBT',
  'ICN',
  'INP',
  'ISC',
  'NPY',
  'PD',
  'PGH',
  'PIE',
  'PL',
  'PT',
  'PTH',
  'PYI',
  'RET',
  'RSE',
  'RUF',
  'SIM',
  'SLF',
  'TCH',
  'TID',
  'TRY',
  'UP',
  'YTT',
]
unfixable = []

# exclude commonly ignored directory
exclude = [
  '.bzr',
  '.direnv',
  '.eggs',
  '.git',
  '.hg',
  '.mypy_cache',
  '.nox',
  '.pants.d',
  '.pytype',
  '.ruff_cache',
  '.svn',
  '.tox',
  '.venv',
  '__pypackages__',
  '_build',
  'buck-out',
  'build',
  'dist',
  'node_modules',
  'venv',
]

# same as Black
line-length = 88

# allow unused variable when underscore-prefixed
dummy-variable-rgx = '^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$'

# assume Python 3.12
target-version = 'py312'

[tool.ruff.mccabe]
# unlike Flake8, default to 10
max-complexity = 10

[tool.ruff.per-file-ignores]
# F401: unused import
# E402: module import not at top of file
'__init__.py' = ['E402', 'F401']
'path/to/file.py' = ['E402', 'F401']

[tool.ruff.flake8-quotes]
docstring-quotes = 'double'
inline-quotes = 'single'

[tool.ruff.pydocstyle]
convention = 'google'

[tool.ruff.pylint]
max-args = 5
max-returns = 5

[tool.ruff.isort]
known-first-party = ['your_package_name']
